<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn">
    
    <!-- internal log file needs to be a full path to something not relative to the app -->
    <!-- if you need to log NLog internal log, add internalLogFile="c:\temp\IdSrv_NLog_internal.txt" to nlog element -->

    <!-- use these values to set the log directory path, app relative or a full path -->
    <variable name="logDirectory" value="logs\IdentityServer"/>
    <variable name="archiveDirectory" value="logs\IdentityServer\Archive"/>

    <!-- Load the ASP.NET Core plugin -->
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
    </extensions>

    <!-- log targets -->
    <targets>

        <!-- erros -->
        <target xsi:type="File" name="errors" fileName="${logDirectory}\errors.log"
                archiveFileName="${archiveDirectory}\errors-{##}.log"
                archiveNumbering="Sequence"
                archiveEvery="Day"
                maxArchiveFiles="5"
                archiveOldFileOnStartup="true"
                layout="${longdate}|${uppercase:${level}}|${logger}|${aspnet-TraceIdentifier}|${message}| ${aspnet-request-method} | ${aspnet-request-url:IncludePort=true:IncludeQueryString=true} | ${exception:format=tostring}">
        </target>

        <!-- application log -->
        <target xsi:type="File" name="app" fileName="${logDirectory}\application.log"
                archiveFileName="${archiveDirectory}\application-{##}.log"
                archiveNumbering="Sequence"
                archiveEvery="Day"
                maxArchiveFiles="5"
                archiveOldFileOnStartup="true"
                layout="${longdate}|${uppercase:${level}}|${logger}|${aspnet-TraceIdentifier}|${message}| ${aspnet-request-method} | ${aspnet-request-url:IncludePort=true:IncludeQueryString=true} | ${exception:format=tostring}">
        </target>

        <!-- Kestrel request log -->
        <target xsi:type="File" name="kestrel" fileName="${logDirectory}\kestrel-request.log"
                archiveFileName="${archiveDirectory}\kestrel-request-{##}.log"
                archiveNumbering="Sequence"
                archiveEvery="Hour"
                maxArchiveFiles="8"
                archiveOldFileOnStartup="true"
                layout="${longdate}|${uppercase:${level}}|${logger}|${aspnet-TraceIdentifier}|${message}| ${aspnet-request-method} | ${aspnet-request-url:IncludePort=true:IncludeQueryString=true} | ${exception:format=tostring}">
        </target>

    </targets>

    <rules>

        <!-- log all errors only to one file (thats why we have final=true) -->
        <logger name="*" minlevel="Error" writeTo="errors" final="true" />

        <!-- Kestrel request log -->
        <logger name="Microsoft.AspNetCore.Hosting.Internal.WebHost" level="Info" writeTo="kestrel">
            <filters>
                <!-- can be filtered with message: 'Request starting ' and 'Request finished ' if only one log entry is desired or with 'Request ' to get both -->
                <when condition="not starts-with('${message}', 'Request finished ')" action="Ignore" />
            </filters>
        </logger>

        <!-- application log loggers -->
        <logger name="Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery" level="Warn" writeTo="app" final="true">
            <filters>
                <!-- don't log messages: The 'Cache-Control' and 'Pragma' headers have been overridden and set to 'no-cache' to prevent caching of this response ...  -->
                <when condition="starts-with('${message}', 'The ''Cache-Control'' and ''Pragma'' headers have been overridden')" action="Ignore" />
            </filters>
        </logger>
        <logger name="Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersMiddleware" level="Warn" writeTo="app" final="true">
            <filters>
                <!-- don't log messages: Parameter count mismatch between X-Forwarded-For and X-Forwarded-Proto. -->
                <when condition="starts-with('${message}', 'Parameter count mismatch between X-Forwarded-For and X-Forwarded-Proto')" action="Ignore" />
            </filters>
        </logger>
        <logger name="Microsoft.AspNetCore.Hosting.Internal.WebHost" level="Info" writeTo="app" final="true">
            <filters>
                <!-- don't log to app the request start and finnish -->
                <when condition="starts-with('${message}', 'Request starting ')" action="Ignore" />
                <when condition="starts-with('${message}', 'Request finished ')" action="Ignore" />
            </filters>
        </logger>

        <!-- write to "blackhole" as there is no writeTo attribute value -->
        <logger name="Microsoft.AspNetCore.*" maxlevel="Info" final="true" />

        <!-- log all info messages to app log -->
        <logger name="*" minlevel="Info" writeTo="app" final="true" />

    </rules>
</nlog>